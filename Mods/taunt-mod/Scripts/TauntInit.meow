Audio.Sound.SetGroup(ModAsset.Audio.Taunt, Audio.Group.Sfx);
Sprite.SetOffset(ModAsset.Sprite.Taunt, Sprite.GetWidth(ModAsset.Sprite.Taunt) / 2, Sprite.GetWidth(ModAsset.Sprite.Taunt) / 2);

lastTaunt = Object.NoOne;
CalcTauntData = fun(x, y, sprite, xscale, yscale) {
	let scale = 1;
	if Sprite.Exists(sprite) {
		scale = (Math.Max(Sprite.GetWidth(sprite), Sprite.GetHeight(sprite)) * xscale) / 75;
		y = y - (Sprite.GetYOffset(sprite) * xscale) + ((Sprite.GetHeight(sprite) * xscale) * 0.4);
	}
	return [x, y, scale];
};
CreateTauntObj = fun() {
	let taunt = Object.Create();
	taunt.Name = "Taunt >w<";
	taunt.Create = fun() {
		self.sprite_index = ModAsset.Sprite.Taunt;
		self.image_xscale = 0.5;
		self.image_yscale = 0.5;
		self.Index = 0;
		self.Player = -1;
		self.image_speed = 0;
		Audio.Play.Sound(ModAsset.Audio.Taunt, 100, 0, 0.4);
	};
	taunt.EndStep = fun() {
		self.Index += 1;
		self.image_index = self.Index;
		let pos = [0, 0, 0, 0];
		if self.Player != -1 {
			let pdata = PlayerOtherData.Get(self.Player);
			if pdata == undefined {
				pdata = {
					"Depth": -1,
					"X": -1,
					"Y": -1,
					"Sprite": noone,
					"XScale": 0,
					"YScale": 0,
				};
				self.visible = false;
			} else {
				self.visible = true;
			}
			pos = CalcTauntData(pdata.X, pdata.Y, pdata.Sprite, pdata.XScale, pdata.YScale);
			self.depth = pdata.Depth + 1;
		} else {
			pos = CalcTauntData(PlayerData.X, PlayerData.Y, PlayerData.Sprite, PlayerData.XScale, PlayerData.YScale);
			self.depth = PlayerData.Depth + 1;
		}
		self.x = pos[0];
		self.y = pos[1];
		self.image_xscale = pos[2];
		self.image_yscale = pos[2];
		if self.image_index > self.image_number {
			PlayerData.SetTaunt(false);
			PlayerData.SetDance(0);
			self.Destroy();
		}
	};
	taunt.RoomEnd = fun() {
		if self.Player == -1 {
			PlayerData.SetTaunt(false);
			PlayerData.SetDance(0);
		}
		self.Destroy();
	};
	return taunt;
};

let watchdog = Object.Create();
watchdog.name = "Taunt Watchdog O.O";
watchdog.Step = fun() {
	--Game.Print(PlayerData.X);
	if Keyboard.CheckPressed(Keyboard.VirtualKey.Tab) and PlayerData.GetOnlineState == "normal" and PlayerData.Exists and !Instance.Exists(lastTaunt) {
		var emoteData = PlayerData.SkinGet(SkinArgument.Emote, []);
		var limit = 0;
		while Array.Length(emoteData) > limit and Type.IsNumeric(emoteData[limit]) {
			limit += 1;
		}
		if limit != 0 {
			PlayerData.SetDance(Random.IRange(1, limit));
		}
		PlayerData.SetTaunt(true);
		let taunt = CreateTauntObj();
		let pos = CalcTauntData(PlayerData.X, PlayerData.Y, PlayerData.Sprite, PlayerData.XScale, PlayerData.YScale);
		lastTaunt = Object.Spawn(pos[0], pos[1], PlayerData.Depth + 1, taunt);
		lastTaunt.image_xscale = pos[2];
		lastTaunt.image_yscale = pos[2];
		P2PListener.Send(P2PCode.CurrentRoom, 0, [PlayerData.IsGhost and PlayerData.IsAdmin]);
	}
};
Instance.Spawn(0, 0, 0, watchdog).persistent = true;

P2PListener.Add(fun(MessageID, Sender, Data) {
	match MessageID {
		case 0 {
			if PlayerData.Pid != Sender {
				if Data[0] and !PlayerData.IsAdmin {
					return;
				}
				let taunt = CreateTauntObj();
				let pdata = PlayerOtherData.Get(sender);
				if pdata == undefined {
					pdata = {
						"Depth": -1,
						"X": -1,
						"Y": -1,
						"Sprite": noone,
						"XScale": 0,
						"YScale": 0,
					};
				}
				let pos = CalcTauntData(pdata.X, pdata.Y, pdata.Sprite, pdata.XScale, pdata.YScale);
				Instance.Spawn(pos[0], pos[1], PlayerOtherData.Get(Sender).Depth + 1, taunt).Player = Sender;
			}
		}
	}
});
